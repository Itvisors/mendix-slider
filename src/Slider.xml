<?xml version="1.0" encoding="utf-8"?>
<widget id="itvisors.slider.Slider" pluginWidget="true" needsEntityContext="true" offlineCapable="true"
        supportedPlatform="Web"
        xmlns="http://www.mendix.com/widget/1.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd">
    <name>Slider</name>
    <description>A Slider </description>
    <icon/>
    <properties>
        <propertyGroup caption="General">
            <property key="sampleText" type="string" required="false">
                <caption>Default value</caption>
                <description>Sample text input</description>
            </property>

            <property key="stepNr" type="expression" required = "true" defaultValue="1">
                <caption>Step number</caption>
                <description>Indicates the interval between steps</description>
                <returnType type="Decimal" />
            </property>

            <property key = "min" type = "expression" defaultValue="0" required = 'true'>
                <caption>Start number</caption>
                <description>Integer to set the start of the slider </description>
                <returnType type="Decimal" />
            </property>   
            
            <property key = "max" type = "expression" defaultValue="100" required = 'true'> 
                <caption>End number</caption>
                <description>Integer to set the end of the slider </description>
                <returnType type="Decimal" />
            </property> 

            <property key = "isVertical" type = "boolean" defaultValue="false" required = "true"> 
                <caption>Is vertical slider</caption>
                <description>Boolean to determine if the slider is vertical or horizontal alligned </description>
            </property> 

            <property key = "isDisabled" type = "attribute" required = "false"> 
                <caption>IsDisabled boolean (path)</caption>
                <description>A boolean that determines wether the slider is active or not</description>
                    <attributeTypes>
                        <attributeType name="Boolean"/>
                    </attributeTypes>
            </property> 
            
        </propertyGroup>
             
        <propertyGroup caption="Data source">
            <property key="valueAttribute" type="attribute">
                <caption>Attribute (path)</caption>
                <description>The attribute where the value should be stored</description>
                <attributeTypes>
                    <attributeType name="Integer"/>
                    <attributeType name="Decimal"/>
                </attributeTypes>
            </property>

            <property key="secondValueAttribute" type="attribute" required = "false">
                <caption>Second Attribute (path)</caption>
                <description>The second attribute where the value should be stored in case of a double slider</description>
                <attributeTypes>
                    <attributeType name="Integer"/>
                    <attributeType name ="Decimal"/>
                </attributeTypes>
            </property>

            <property key="onChangeAction" type="action" required="false">
	            <caption>On change</caption>
	            <description>Action to be performed when slider is adjusted</description>
            </property>                         
        </propertyGroup>
    </properties>
</widget>

            
 <!--            <property key="markList" type="object" isList="true" required="false">
                <caption>Marks</caption>
                <description/>
                <properties>
                    <propertyGroup caption="Mark info">
                        <property key="markPoint" type="integer" required="true" defaultValue="0">
                            <caption>Mark point</caption>
                            <description>Point where the mark will be set</description>
                        </property>
                        <property key="markString" type="string" required="true">
                            <caption>Mark string</caption>
                            <description>Text to be displayed at mark</description>
                        </property>
                    </propertyGroup>
                </properties>
            </property> -->
