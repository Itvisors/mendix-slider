// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Slider
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject sliderMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Slider";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		CurrentValue("CurrentValue"),
		SecondValue("SecondValue"),
		CurrentValueDecimal("CurrentValueDecimal"),
		MaxDecimal("MaxDecimal"),
		IsDisabled("IsDisabled");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Slider(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MyFirstModule.Slider"));
	}

	protected Slider(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject sliderMendixObject)
	{
		if (sliderMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MyFirstModule.Slider", sliderMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MyFirstModule.Slider");

		this.sliderMendixObject = sliderMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Slider.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static myfirstmodule.proxies.Slider initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.Slider.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.Slider initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Slider(context, mendixObject);
	}

	public static myfirstmodule.proxies.Slider load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Slider.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.Slider> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<myfirstmodule.proxies.Slider> result = new java.util.ArrayList<myfirstmodule.proxies.Slider>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MyFirstModule.Slider" + xpathConstraint))
			result.add(myfirstmodule.proxies.Slider.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of CurrentValue
	 */
	public final java.lang.Integer getCurrentValue()
	{
		return getCurrentValue(getContext());
	}

	/**
	 * @param context
	 * @return value of CurrentValue
	 */
	public final java.lang.Integer getCurrentValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.CurrentValue.toString());
	}

	/**
	 * Set value of CurrentValue
	 * @param currentvalue
	 */
	public final void setCurrentValue(java.lang.Integer currentvalue)
	{
		setCurrentValue(getContext(), currentvalue);
	}

	/**
	 * Set value of CurrentValue
	 * @param context
	 * @param currentvalue
	 */
	public final void setCurrentValue(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer currentvalue)
	{
		getMendixObject().setValue(context, MemberNames.CurrentValue.toString(), currentvalue);
	}

	/**
	 * @return value of SecondValue
	 */
	public final java.lang.Integer getSecondValue()
	{
		return getSecondValue(getContext());
	}

	/**
	 * @param context
	 * @return value of SecondValue
	 */
	public final java.lang.Integer getSecondValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SecondValue.toString());
	}

	/**
	 * Set value of SecondValue
	 * @param secondvalue
	 */
	public final void setSecondValue(java.lang.Integer secondvalue)
	{
		setSecondValue(getContext(), secondvalue);
	}

	/**
	 * Set value of SecondValue
	 * @param context
	 * @param secondvalue
	 */
	public final void setSecondValue(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer secondvalue)
	{
		getMendixObject().setValue(context, MemberNames.SecondValue.toString(), secondvalue);
	}

	/**
	 * @return value of CurrentValueDecimal
	 */
	public final java.math.BigDecimal getCurrentValueDecimal()
	{
		return getCurrentValueDecimal(getContext());
	}

	/**
	 * @param context
	 * @return value of CurrentValueDecimal
	 */
	public final java.math.BigDecimal getCurrentValueDecimal(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.CurrentValueDecimal.toString());
	}

	/**
	 * Set value of CurrentValueDecimal
	 * @param currentvaluedecimal
	 */
	public final void setCurrentValueDecimal(java.math.BigDecimal currentvaluedecimal)
	{
		setCurrentValueDecimal(getContext(), currentvaluedecimal);
	}

	/**
	 * Set value of CurrentValueDecimal
	 * @param context
	 * @param currentvaluedecimal
	 */
	public final void setCurrentValueDecimal(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal currentvaluedecimal)
	{
		getMendixObject().setValue(context, MemberNames.CurrentValueDecimal.toString(), currentvaluedecimal);
	}

	/**
	 * @return value of MaxDecimal
	 */
	public final java.math.BigDecimal getMaxDecimal()
	{
		return getMaxDecimal(getContext());
	}

	/**
	 * @param context
	 * @return value of MaxDecimal
	 */
	public final java.math.BigDecimal getMaxDecimal(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.MaxDecimal.toString());
	}

	/**
	 * Set value of MaxDecimal
	 * @param maxdecimal
	 */
	public final void setMaxDecimal(java.math.BigDecimal maxdecimal)
	{
		setMaxDecimal(getContext(), maxdecimal);
	}

	/**
	 * Set value of MaxDecimal
	 * @param context
	 * @param maxdecimal
	 */
	public final void setMaxDecimal(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal maxdecimal)
	{
		getMendixObject().setValue(context, MemberNames.MaxDecimal.toString(), maxdecimal);
	}

	/**
	 * @return value of IsDisabled
	 */
	public final java.lang.Boolean getIsDisabled()
	{
		return getIsDisabled(getContext());
	}

	/**
	 * @param context
	 * @return value of IsDisabled
	 */
	public final java.lang.Boolean getIsDisabled(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsDisabled.toString());
	}

	/**
	 * Set value of IsDisabled
	 * @param isdisabled
	 */
	public final void setIsDisabled(java.lang.Boolean isdisabled)
	{
		setIsDisabled(getContext(), isdisabled);
	}

	/**
	 * Set value of IsDisabled
	 * @param context
	 * @param isdisabled
	 */
	public final void setIsDisabled(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isdisabled)
	{
		getMendixObject().setValue(context, MemberNames.IsDisabled.toString(), isdisabled);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return sliderMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Slider that = (myfirstmodule.proxies.Slider) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MyFirstModule.Slider";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
